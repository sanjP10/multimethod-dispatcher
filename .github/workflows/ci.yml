name: Tests and Release
on: [ push, pull_request ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15.7'
      - run: GO111MODULE=on go get -u github.com/sanjP10/release
      - run: release validate -username ${{ github.actor }} -password ${{ secrets.PERSONAL_ACCESS_TOKEN }} -repo ${{ github.repository }} -changelog CHANGELOG.md -hash ${{ github.sha }} -provider github

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.5, 3.6, 3.7, 3.8, 3.9 ]
        os: [ ubuntu-18.04, macOS-latest, windows-latest ]
        include:
          # pypy3 on Mac OS currently fails trying to compile
          # brotlipy. Moving pypy3 to only test linux.
          - python-version: pypy3
            os: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -e ".[dev]"
      - run: pylint src setup.py
      - run: pylint tests --disable E0102 # multimethod allows for multiple function names
      - run: coverage run --source=src/ -m unittest discover
      - run: coverage report --fail-under 90

  create:
    runs-on: ubuntu-latest
    needs:
      - tests
      - validate
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15.7'
      - run: GO111MODULE=on go get -u github.com/sanjP10/release
      - run: release create -username ${{ github.actor }} -password ${{ secrets.PERSONAL_ACCESS_TOKEN }} -repo ${{ github.repository }} -changelog CHANGELOG.md -hash ${{ github.sha }} -provider github
